"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4842],{35318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(n),u=i,g=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(g,s(s({ref:t},p),{},{components:n})):r.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[d]="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},58100:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(27378);const i={borderRadius:"0.5rem",marginTop:"1rem",marginBottom:"1rem",maxHeight:"40rem",maxWidth:"40rem"};function o(e){const{name:t,style:n=i,webm:o}=e,s=(0,r.useRef)(null);return(0,r.useEffect)((()=>{if("undefined"==typeof document)return;const e=async e=>{if("KeyF"!==e.code)return;const t=s.current;if(t)if(document.fullscreenElement)document.fullscreenElement===t&&await(document.exitFullscreen?.());else{const e=function(){const e=document.getElementsByTagName("video");return Array.from(e).filter((e=>e.offsetWidth>0||e.offsetHeight>0||e.getClientRects().length>0)).sort(((e,t)=>{const n=e.getClientRects()[0],r=t.getClientRects()[0];return Math.abs(n.top+(n.height<<1))-Math.abs(r.top+(r.height<<1))}))}()[0];e===t&&(t.focus?.(),await(t.requestFullscreen?.({navigationUI:"show"})))}};return document.addEventListener("keydown",e),()=>document.removeEventListener("keydown",e)}),[]),r.createElement("video",{ref:s,style:n,poster:`/devicescript/videos/${t}.jpg`,playsInline:!0,controls:!0,preload:"metadata"},r.createElement("source",{src:`/devicescript/videos/${t}.mp4`,type:"video/mp4"}),r.createElement("p",null,"Your browser doesn't support HTML video. Here is a",r.createElement("a",{href:`/devicescript/videos/${t}.mp4`},"link to the video")," ","instead."))}},44030:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var r=n(25773),i=(n(27378),n(35318)),o=n(58100);const s={sidebar_position:2,description:"Learn how to create the classic LED blinking program on Raspberry Pi Pico and ESP32 using DeviceScript.",keywords:["Raspberry Pi Pico","ESP32","LED blinking","DeviceScript","microcontroller programming"]},a="Blinky",c={unversionedId:"getting-started/samples/blinky",id:"getting-started/samples/blinky",title:"Blinky",description:"Learn how to create the classic LED blinking program on Raspberry Pi Pico and ESP32 using DeviceScript.",source:"@site/docs/getting-started/samples/blinky.mdx",sourceDirName:"getting-started/samples",slug:"/getting-started/samples/blinky",permalink:"/devicescript/getting-started/samples/blinky",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Learn how to create the classic LED blinking program on Raspberry Pi Pico and ESP32 using DeviceScript.",keywords:["Raspberry Pi Pico","ESP32","LED blinking","DeviceScript","microcontroller programming"]},sidebar:"tutorialSidebar",previous:{title:"Samples",permalink:"/devicescript/getting-started/samples/"},next:{title:"Copy Paste Button",permalink:"/devicescript/getting-started/samples/copy-paste-button"}},l={},p=[{value:"ESP32",id:"esp32",level:2}],d={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"blinky"},"Blinky"),(0,i.kt)("p",null,"The classic LED blinking program on a ",(0,i.kt)("a",{parentName:"p",href:"/devices/rp2040"},"Raspberry Pi Pico"),". The LED is connected to the Pico's pin GP1 (2 on the silk)"),(0,i.kt)(o.Z,{name:"blinky",mdxType:"StaticVideo"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { pins } from "@dsboard/pico"\nimport { startLightBulb } from "@devicescript/servers"\n\n// start a lightbulb server on pin GP1\n// and store client in `led` variable\nconst led = startLightBulb({\n    pin: pins.P1,\n})\n\n// start interval timer every 1000ms\nsetInterval(async () => {\n    // read current brightness\n    const brightness = await led.intensity.read()\n    // toggle on/off\n    const newbrightness = brightness > 0 ? 0 : 1\n    // apply new brightness\n    await led.intensity.write(newbrightness)\n}, 1000)\n')),(0,i.kt)("h2",{id:"esp32"},"ESP32"),(0,i.kt)("p",null,"The classic LED blinking program on a ",(0,i.kt)("a",{parentName:"p",href:"/devices/esp32"},"ESP32"),"\nis similar. The LED is connected to the pin ",(0,i.kt)("inlineCode",{parentName:"p"},"A0"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { pins } from "@dsboard/adafruit_qt_py_c3"\nimport { startLightBulb } from "@devicescript/servers"\n\nconst lightBulb = startLightBulb({\n    pin: pins.A0,\n})\n\nsetInterval(async () => {\n    await lightBulb.toggle()\n}, 500)\n')))}u.isMDXComponent=!0}}]);